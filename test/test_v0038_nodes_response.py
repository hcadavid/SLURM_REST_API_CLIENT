# coding: utf-8

"""
    Slurm Rest API RO

    API to access Slurm. Only GET requests are implemented.

    The version of the OpenAPI document: 0.0.38
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v0038_nodes_response import V0038NodesResponse

class TestV0038NodesResponse(unittest.TestCase):
    """V0038NodesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0038NodesResponse:
        """Test V0038NodesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0038NodesResponse`
        """
        model = V0038NodesResponse()
        if include_optional:
            return V0038NodesResponse(
                meta = {"Slurm":{"release":"release","version":{"major":0,"minor":1,"micro":6}},"plugin":{"name":"name","type":"type"}},
                errors = [
                    {"description":"description","source":"source","error":"error","error_number":5}
                    ],
                nodes = [
                    {"reason":"reason","boards":0,"alloc_cpus":7,"active_features":"active_features","reason_set_by_user":"reason_set_by_user","slurmd_start_time":4,"features":"features","hostname":"hostname","cores":1,"slurmd_version":"slurmd_version","reason_changed_at":2,"operating_system":"operating_system","next_state_after_reboot_flags":["next_state_after_reboot_flags","next_state_after_reboot_flags"],"tres":"tres","cpu_binding":5,"state":"state","sockets":7,"architecture":"architecture","owner":"owner","partitions":["partitions","partitions"],"state_flags":["state_flags","state_flags"],"address":"address","cpus":7,"free_memory":2,"tres_weighted":6.84685269835264,"gres":"gres","gres_drained":"gres_drained","threads":1,"weight":1,"boot_time":6,"gres_used":"gres_used","alloc_memory":4,"mcs_label":"mcs_label","real_memory":3,"burstbuffer_network_address":"burstbuffer_network_address","port":9,"name":"name","next_state_after_reboot":"next_state_after_reboot","temporary_disk":1,"tres_used":"tres_used","idle_cpus":1,"cpu_load":5}
                    ]
            )
        else:
            return V0038NodesResponse(
        )
        """

    def testV0038NodesResponse(self):
        """Test V0038NodesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
