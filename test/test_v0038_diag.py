# coding: utf-8

"""
    Slurm Rest API RO

    API to access Slurm. Only GET requests are implemented.

    The version of the OpenAPI document: 0.0.38
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v0038_diag import V0038Diag

class TestV0038Diag(unittest.TestCase):
    """V0038Diag unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0038Diag:
        """Test V0038Diag
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0038Diag`
        """
        model = V0038Diag()
        if include_optional:
            return V0038Diag(
                meta = {"Slurm":{"release":"release","version":{"major":0,"minor":1,"micro":6}},"plugin":{"name":"name","type":"type"}},
                errors = [
                    {"description":"description","source":"source","error":"error","error_number":5}
                    ],
                statistics = {"schedule_cycle_per_minute":4,"req_time_start":7,"jobs_running":3,"bf_cycle_max":6,"bf_last_backfilled_jobs":2,"rpcs_by_message_type":[{"average_time":7,"type_id":3,"count":3,"message_type":"message_type","total_time":5},{"average_time":7,"type_id":3,"count":3,"message_type":"message_type","total_time":5}],"bf_last_depth":3,"bf_backfilled_het_jobs":6,"bf_backfilled_jobs":1,"rpcs_by_user":[{"average_time":0,"user_id":3,"count":4,"total_time":6,"user":"user"},{"average_time":0,"user_id":3,"count":4,"total_time":6,"user":"user"}],"bf_table_size":4,"bf_cycle_mean":5,"job_states_ts":6,"bf_queue_len":6,"jobs_started":9,"schedule_cycle_max":1,"server_thread_count":9,"dbd_agent_queue_size":7,"bf_table_size_mean":8,"jobs_pending":6,"agent_count":2,"bf_cycle_last":7,"parts_packed":5,"agent_thread_count":4,"jobs_completed":6,"bf_depth_mean":7,"bf_active":true,"bf_depth_mean_try":0,"schedule_cycle_mean":7,"agent_queue_size":3,"jobs_failed":9,"gettimeofday_latency":1,"bf_last_depth_try":3,"req_time":2,"bf_cycle_counter":6,"schedule_queue_length":5,"bf_queue_len_mean":0,"schedule_cycle_total":6,"bf_when_last_cycle":7,"schedule_cycle_last":1,"jobs_canceled":8,"jobs_submitted":9,"schedule_cycle_mean_depth":1}
            )
        else:
            return V0038Diag(
        )
        """

    def testV0038Diag(self):
        """Test V0038Diag"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
